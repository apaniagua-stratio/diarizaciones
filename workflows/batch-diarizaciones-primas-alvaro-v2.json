{"id":"0b31a9fe-b0d7-4b73-a14e-b287cd528030","name":"batch-diarizaciones-primas-alvaro","description":"","settings":{"global":{"executionMode":"marathon","userPluginsJars":[],"initSqlSentences":[{"sentence":"CREATE TEMPORARY TABLE XPOLIZAS_COMUN USING PARQUET OPTIONS (path '{{NINF_STAGING}}/XPOLIZAS_COMUN')"},{"sentence":"CREATE TEMPORARY TABLE V_XRECIBOS USING PARQUET OPTIONS (path '{{NINF_STAGING}}/V_XRECIBOS')"},{"sentence":"CREATE TEMPORARY TABLE XRECIBOS USING PARQUET OPTIONS (path '{{NINF_STAGING}}/XRECIBOS')"},{"sentence":"CREATE TEMPORARY TABLE RECIBOSEXCLUIR USING PARQUET OPTIONS (path '{{NINF_STAGING}}/RECIBOSEXCLUIR')"},{"sentence":"CREATE TEMPORARY TABLE XPOLIZAS USING PARQUET OPTIONS (path '{{NINF_STAGING}}/XPOLIZAS')"},{"sentence":"CREATE TEMPORARY TABLE TGRRECIB USING PARQUET OPTIONS (path '{{NINF_STAGING}}/TGRRECIB')"},{"sentence":"CREATE TEMPORARY TABLE TGRDESGL USING PARQUET OPTIONS (path '{{NINF_STAGING}}/TGRDESGL')"},{"sentence":"CREATE TEMPORARY TABLE TAMMOVRE USING PARQUET OPTIONS (path '{{NINF_STAGING}}/TAMMOVRE')"}],"addAllUploadedPlugins":true,"mesosConstraint":"","mesosConstraintOperator":"CLUSTER"},"streamingSettings":{"window":"2s","blockInterval":"100ms","checkpointSettings":{"checkpointPath":"sparta/checkpoint","enableCheckpointing":true,"autoDeleteCheckpoint":true,"addTimeToCheckpointPath":false}},"sparkSettings":{"master":"{{SPARK_MASTER}}","sparkKerberos":true,"sparkDataStoreTls":true,"sparkMesosSecurity":true,"submitArguments":{"userArguments":[],"deployMode":"client","driverJavaOptions":"{{{SPARK_DRIVER_JAVA_OPTIONS}}}"},"sparkConf":{"sparkResourcesConf":{"coresMax":"24","executorMemory":"24G","executorCores":"4","driverCores":"{{SPARK_DRIVER_CORES}}","driverMemory":"16G","mesosExtraCores":"","localityWait":"{{SPARK_LOCALITY_WAIT}}","taskMaxFailures":"{{SPARK_TASK_MAX_FAILURES}}","sparkMemoryFraction":"0.8","sparkParallelism":""},"userSparkConf":[{"sparkConfKey":"spark.sql.shuffle.partitions","sparkConfValue":"2040"}],"coarse":true,"sparkUser":"{{SPARK_USER}}","sparkLocalDir":"{{SPARK_LOCAL_PATH}}","executorDockerImage":"{{SPARK_EXECUTOR_BASE_IMAGE}}","sparkKryoSerialization":true,"sparkSqlCaseSensitive":true,"logStagesProgress":false,"hdfsTokenCache":true,"executorExtraJavaOptions":"{{{SPARK_EXECUTOR_EXTRA_JAVA_OPTIONS}}}"}},"errorsManagement":{"genericErrorManagement":{"whenError":"Error"},"transformationStepsManagement":{"whenError":"Error","whenRowError":"RowError","whenFieldError":"FieldError"},"transactionsManagement":{"sendToOutputs":[],"sendStepData":false,"sendPredecessorsData":true,"sendInputData":true}}},"pipelineGraph":{"nodes":[{"name":"GroupFechas","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary","NaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1932.2607876507764,"y":405.9309878087813}},"configuration":{"sql":"select\n\tapolclav,\n\tFechaEstudio,\n\tMax(FechaEstudio) as FechaEstudioMax,\n\tMax(Tipo) as Tipo\nfrom \n\tUnionFechas\ngroup by apolclav,FechaEstudio\n\n/*\nselect\n\tapolclav,\n\tFechaEstudio,\n\tMAX(Tipo) as Tipo\nfrom \n\tFechaEfectoRecibo\ngroup by apolclav,FechaEstudio\n\nselect\n\t\t\t\tapolclav,\n\t\t\t\tfechaestudio,\n\t\t\t\t--Nos quedamos con el tipo de corte mayor, de forma que si queda 0 es un corte prescindible.\n\t\t\t\tMAX (tipo) as tipo\n\t\tfrom \n\t\t\tUnionFechasEstudio\n\t\tgroup by apolclav,fechaEstudio\n\t\t\t\t \n\tinsert into\n\t\t\ttmp_m.diarizaciones_autos.fechasEstudioD  with (tablock)\n\t\tselect\n\t\t\t\tapolclav,\n\t\t\t\tfechaestudio,\n\t\t\t\t--Nos quedamos con el tipo de corte mayor, de forma que si queda 0 es un corte prescindible.\n\t\t\t\tMAX (tipo) as tipo\n\t\tfrom \n\t\t\ttmp_m.diarizaciones_autos.fechasEstudio\n\t\tgroup by apolclav,\n\t\t\t\t fechaEstudio\n\t*/","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Batch"],"executionEngine":"Batch"},{"name":"PeriodosEstudio","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary","NaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1932.007762131082,"y":212.7979284716033}},"configuration":{"sql":"\tSELECT \n\t\tbase64(concat(apolclav,FechaEstudio,Tipo)) as IdPeriodo,\n\t\tapolclav,\n\t\tFechaEstudio as FIni,\n\t\tyear(FechaEstudio) as FAno,\n\t\tDATE_ADD(FechaEstudioMax,1) as FFin,\n\t\tCASE\n\t\t\tWHEN Tipo=0 THEN 0\n\t\t\tELSE 1\n\t\t\tEND AS Cambio_Caracteristica\n\tFROM GroupFechas \n\t\n\t/*\n\tselect \n\t\t\tidentity(bigint,'+@ultimoIdPeriodo+',1) as IdPeriodo,\n\t\t\tF1.Apolclav,\n\t\t\tF1.FechaEstudio as Fini,\n\t\t\tyear(F1.FechaEstudio) as FA?o,\n\t\t\tdateadd(day,-1,\n\t\t\t\t(select top 1 F2.FechaEstudio \n\t\t\t\tfrom tmp_m.diarizaciones_autos.fechasEstudioD F2 \n\t\t\t\twhere F1.apolclav=F2.Apolclav and \n\t\t\t\t\t  F1.FechaEstudio<F2.FechaEstudio \n\t\t\t\torder by fechaestudio))as Ffin,\n\t\t\tcase\n\t\t\t\twhen f1.tipo=0 then 0\n\t\t\t\telse 1\n\t\t\tend as Cambio_Caracteristica\n\t\tinto\n\t\t\ttmp_m.diarizaciones_autos.PeriodosEstudio\n\t\tfrom\n\t\t\ttmp_m.diarizaciones_autos.fechasEstudioD F1\n\t\t\t\n\t\t*/","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Batch"],"executionEngine":"Batch"},{"name":"PeriodosEstudioGrupos","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary","NaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":2156.1254295287263,"y":133.24338923844925}},"configuration":{"sql":"select \n\tIdPeriodo,\n\tCAST(apolclav AS INT) AS apolclav,\n\tTO_DATE(FIni) AS FIni,\n\tTO_DATE(FFin) AS FFin,\n\tCAST(FAno AS INT) AS FAno,\n\tCAST(Cambio_Caracteristica AS INT) AS Cambio_Caracteristica,\n\tdense_rank() OVER (PARTITION BY apolclav,FAno ORDER BY FIni DESC) as Grupo\nfrom\n\tPeriodosEstudio\n\n--[IdPeriodo, FIni, Cambio_Caracteristica, FFin, FAno, apolclav\n\n/*\nselect \n\t\t\tp.Idperiodo,\n\t\t\tp.Apolclav,\n\t\t\tp.Fini,\n\t\t\tp.Ffin,\n\t\t\tp.Fa?o,\n\t\t\tp.Cambio_Caracteristica,\n\t\t\t(select sum(isnull(p2.cambio_caracteristica,0))\n\t\t\t\t\t from \n\t\t\t\t\t\ttmp_m.diarizaciones_autos.periodosEstudio p2\n\t\t\t\t\t where\n\t\t\t\t\t\tp2.apolclav=p.apolclav and\n\t\t\t\t\t\tp2.fa?o=p.fa?o and\n\t\t\t\t\t\tp2.fini>p.fini\n\t\t\t)as Grupo\n\t\tinto tmp_m.diarizaciones_autos.periodosestudioGrupos\n\t\tfrom\n\t\t\ttmp_m.Diarizaciones_Autos.periodosestudio p\n\t*/","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Batch"],"executionEngine":"Batch"},{"name":"DiarizacionPrimasModulos","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary","NaryToNary"],"writer":{"saveMode":"Overwrite","tableName":"","partitionBy":"","errorTableName":""},"description":"","uiConfiguration":{"position":{"x":2161.54724109633,"y":-35.47754689114254}},"configuration":{"sql":"select \n\t\t\tPer.IdPeriodo,\n\t\t\tPer.Cambio_Caracteristica,\n\t\t\tPer.Grupo,\n\t\t\tPer.FAno as FAno,\n\t\t\tcase \n\t\t\t\t\twhen Rec.FrecuenciaPago='A' then 1\n\t\t\t\t\twhen Rec.FrecuenciaPago='S' then 2\n\t\t\t\t\twhen Rec.FrecuenciaPago='T' then 3\n\t\t\t\t\twhen Rec.FrecuenciaPago='M' then 4\n\t\t\t\t\twhen Rec.FrecuenciaPago='P' then 5\n\t\t\t\t\telse 1\n\t\t\tend as FrecuenciaPago,\n\t\t\tRec.ReferenciaRecibo as RefRecibo,\n\t\t\tPer.FIni as FechaEfe,\n\t\t\tPer.FFin as FechaHas,\n\t\t\tRec.FecEfecto,\n\t\t\t Rec.FecVencimiento,\n\t\t\t Rec.TipoRecibo,\n\t\t\t Rec.TipUnGes,\n\t\t\t Rec.FormaPago,\n\t\t\t Rec.Poliza,\n\t\t\t NVL(Rec.FactorPrimaRecibo,1) as FactorPrimaRecibo,\n\t\t\t Rec.Idempresa as IdEmpresa,\n\t\t\t Rec.Idramo as IdRamo,\n\t\t\t 1 as TipoPrima\n\t\tfrom\n\t\t\tPeriodosEstudioGrupos Per\n\t\t\tjoin\n\t\t\tExcluirRecibos Rec\n\t\t\ton\n\t\t\t\tRec.FecEfecto <= Per.FIni \n\t\t\t\tand Rec.Poliza = Per.apolclav \n\t\t\t\tand Rec.FecVencimiento>Per.FIni             \n\t\twhere Rec.FecEfecto < Rec.FecVencimiento\n\t\t\tand Rec.Imputable = 1 and \n\t\t  \tPer.IdPeriodo is not null and\n\t\t  \tPer.FIni>=TO_DATE('{{DIARIZACIONES_INICIO}}') and \n\t\t  \tPer.FIni<=TO_DATE('{{DIARIZACIONES_FECHA}}') \t\t\t  \n\t\tgroup by Per.IdPeriodo,\n\t\t\t\t Per.Cambio_Caracteristica,\n\t\t\t\t Per.Grupo,\n\t\t\t\t Rec.ReferenciaRecibo,\n\t\t\t\t Per.FIni,\n\t\t\t\t Per.FFin,\n\t\t\t\t Rec.FecEfecto,\n\t\t\t\t Rec.FecVencimiento,\n\t\t\t\t Rec.TipoRecibo,\n\t\t\t\t Rec.FrecuenciaPago,\n\t\t\t\t Per.FAno,\n\t\t\t\t Rec.TipUnGes,\n\t\t\t\t Rec.FormaPago,\n\t\t\t\t Rec.Poliza,\n\t\t\t\t Rec.FactorPrimaRecibo,\n\t\t\t\t Rec.Idempresa,\n\t\t\t \t Rec.Idramo\nUNION ALL\nselect \n\t\t\tPer.IdPeriodo,\n\t\t\tPer.Cambio_Caracteristica,\n\t\t\tPer.Grupo,\n\t\t\tPer.FAno as FAno,\n\t\t\tcase \n\t\t\t\t\twhen Rec.FrecuenciaPago='A' then 1\n\t\t\t\t\twhen Rec.FrecuenciaPago='S' then 2\n\t\t\t\t\twhen Rec.FrecuenciaPago='T' then 3\n\t\t\t\t\twhen Rec.FrecuenciaPago='M' then 4\n\t\t\t\t\twhen Rec.FrecuenciaPago='P' then 5\n\t\t\t\t\telse 1\n\t\t\tend as FrecuenciaPago,\n\t\t\tRec.ReferenciaRecibo as RefRecibo,\n\t\t\tPer.FIni as FechaEfe,\n\t\t\tPer.FFin as FechaHas,\n\t\t\t Rec.FecEfecto,\n\t\t\t Rec.FecVencimiento,\n\t\t\t Rec.TipoRecibo,\n\t\t\t Rec.TipUnGes,\n\t\t\t Rec.FormaPago,\n\t\t\t Rec.Poliza,\n\t\t\t NVL(Rec.FactorPrimaRecibo,1) as FactorPrimaRecibo,\n\t\t\t Rec.Idempresa as IdEmpresa,\n\t\t\t Rec.Idramo as IdRamo,\n\t\t\t 2 as TipoPrima\n\t\tfrom\n\t\t\tPeriodosEstudioGrupos Per\n\t\t\tjoin\n\t\t\tExcluirRecibos Rec\n\t\t\ton\n\t\t\t\tRec.FecEfecto <= Per.FIni and\n\t\t\t\tdate_add(Rec.FecVencimiento,1) > Per.FIni and            \n\t\t\t\tRec.Poliza = Per.apolclav \n\t\twhere Rec.FecEfecto=Rec.FecVencimiento and\n\t\t\t  Rec.Estado=  'DV'  and\t\n\t\t\t  Rec.Imputable=1 and \n\t\t  \t  Per.IdPeriodo is not null and\n\t\t  \t  Per.FIni >= TO_DATE('{{DIARIZACIONES_INICIO}}') and \n\t\t  \t  Per.FIni <= TO_DATE('{{DIARIZACIONES_FECHA}}') \t\t\t  \n\t\tgroup by Per.IdPeriodo,\n\t\t\t\t Per.Cambio_Caracteristica,\n\t\t\t\t Per.Grupo,\n\t\t\t\t Rec.ReferenciaRecibo,\n\t\t\t\t Per.FIni,\n\t\t\t\t Per.FFin,\n\t\t\t\t Rec.FecEfecto,\n\t\t\t\t Rec.FecVencimiento,\n\t\t\t\t Rec.TipoRecibo,\n\t\t\t\t Rec.FrecuenciaPago,\n\t\t\t\t Per.FAno,\n\t\t\t\t Rec.TipUnGes,\n\t\t\t\t Rec.FormaPago,\n\t\t\t\t Rec.Poliza,\n\t\t\t\t Rec.FactorPrimaRecibo,\n\t\t\t\t Rec.Idempresa,\n\t\t\t \t Rec.Idramo\nUNION ALL\nselect \n\t\t\tPer.IdPeriodo,\n\t\t\tPer.Cambio_Caracteristica,\n\t\t\tPer.Grupo,\n\t\t\tPer.FAno as FAno,\n\t\t\tcase \n\t\t\t\t\twhen Rec.FrecuenciaPago='A' then 1\n\t\t\t\t\twhen Rec.FrecuenciaPago='S' then 2\n\t\t\t\t\twhen Rec.FrecuenciaPago='T' then 3\n\t\t\t\t\twhen Rec.FrecuenciaPago='M' then 4\n\t\t\t\t\twhen Rec.FrecuenciaPago='P' then 5\n\t\t\t\t\telse 1\n\t\t\tend as FrecuenciaPago,\n\t\t\tRec.ReferenciaRecibo as RefRecibo,\n\t\t\tPer.FIni as FechaEfe,\n\t\t\tPer.FFin as FechaHas,\n\t\t\tRec.FecEfecto,\n\t\t\t Rec.FecVencimiento,\n\t\t\t Rec.TipoRecibo,\n\t\t\t Rec.TipUnGes,\n\t\t\t Rec.FormaPago,\n\t\t\t Rec.Poliza,\n\t\t\t NVL(Rec.FactorPrimaRecibo,1) as FactorPrimaRecibo,\n\t\t\t Rec.Idempresa as IdEmpresa,\n\t\t\t Rec.Idramo as IdRamo,\n\t\t\t 3 as TipoPrima\n\t\tfrom\n\t\t\tPeriodosEstudioGrupos Per\n\t\t\tjoin\n\t\t\tExcluirRecibos Rec\n\t\t\ton\n\t\t\t\tRec.FecEfecto<=Per.FIni and\n\t\t\t\tDATE_ADD(Rec.FecEfecto,365) > Per.FIni and           \n\t\t\t\tRec.Poliza = Per.apolclav \n\t\twhere  Rec.FecEfecto=Rec.FecVencimiento and    \n\t\t\t  Rec.TipoRecibo='010' and\t\t\t\t \n\t\t\t  Rec.Estado='EM' and \n\t\t\t  Rec.Imputable=1 and \n\t\t  \t  Per.IdPeriodo is not null and\n\t\t  \t  Per.FIni>=TO_DATE('{{DIARIZACIONES_INICIO}}') and \n\t\t  \t  Per.FIni<=TO_DATE('{{DIARIZACIONES_FECHA}}') \t\t\t  \n\t\tgroup by Per.IdPeriodo,\n\t\t\t\t Per.Cambio_Caracteristica,\n\t\t\t\t Per.Grupo,\n\t\t\t\t Rec.ReferenciaRecibo,\n\t\t\t\t Per.FIni,\n\t\t\t\t Per.FFin,\n\t\t\t\t Rec.FecEfecto,\n\t\t\t\t Rec.FecVencimiento,\n\t\t\t\t Rec.TipoRecibo,\n\t\t\t\t Rec.FrecuenciaPago,\n\t\t\t\t Per.FAno,\n\t\t\t\t Rec.TipUnGes,\n\t\t\t\t Rec.FormaPago,\n\t\t\t\t Rec.Poliza,\n\t\t\t\t Rec.FactorPrimaRecibo,\n\t\t\t\t Rec.Idempresa,\n\t\t\t \t Rec.Idramo\t\t\t","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Batch"],"executionEngine":"Batch"},{"name":"DiarizacionPrimas2Modulos","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary","NaryToNary"],"writer":{"saveMode":"Overwrite","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":2416.1413985492873,"y":-34.724596992781244}},"configuration":{"sql":"select \n\t\t\tdp.IdPeriodo,\n\t\t\tdp.Cambio_Caracteristica,\n\t\t\tdp.Grupo,\n\t\t\tdp.FAno as FAno,\n\t\t\tdp.FrecuenciaPago,\n\t\t\tdp.RefRecibo,\n\t\t\tdp.FechaEfe,\n\t\t\tdp.FechaHas,\n\t\t\tcase \n\t\t\t\twhen TipoPrima = 1 then \n\t\t\t\t\tCAST(\n\t\t\t\t\tsum(dp.FactorPrimaRecibo * Desg.GRDESGL_IMPORTE)\n\t\t\t\t\t/\n\t\t\t\t\t(DATEDIFF(dp.FecVencimiento,dp.FecEfecto)\n\t\t\t\t\t*\n\t\t\t\t\t(DATEDIFF(dp.FechaHas,dp.FechaEfe)+1))\n\t\t\t\t\tAS DECIMAL(9,4))\n\t\t\t\twhen TipoPrima = 2 then \n\t\t\t\t\tCAST(\n\t\t\t\t\tsum(dp.FactorPrimaRecibo * Desg.GRDESGL_IMPORTE)\n\t\t\t\t\tAS DECIMAL(9,4))\n\t\t\t\telse \n\t\t\t\t\tCAST(\n\t\t\t\t\tsum((dp.FactorPrimaRecibo * Desg.GRDESGL_IMPORTE / 365)\n\t\t\t\t\t*\n\t\t\t\t\tDATEDIFF(dp.FechaHas,dp.FechaEfe)+1)\n\t\t\t\t\tAS DECIMAL(9,4))\n\t\t\t\tend as Prima, \n\t\t\t dp.TipoRecibo,\n\t\t\t dp.TipUnGes,\n\t\t\t dp.FormaPago,\n\t\t\t dp.Poliza,\n\t\t\t CAST(Desg.GRDESGL_COD_GARAN AS INT) as Garantia\n\t\tfrom\n\t\t\tDiarizacionPrimasModulos dp\n\t\t\tjoin\n\t\t\tFilterTGRDESGL Desg\t\t\t\t\n\t\t\ton\n\t\t\t\tGRDESGL_REF_RECIBO=dp.RefRecibo \n\t\t\t\tAND Desg.GRDESGL_EMPRESA=dp.IdEmpresa \n\t\t\t\t--Desg.GRDESGL_RAMO=dp.IdRamo and\n\t\t\t\t--and Desg.GRDESGL_COD_DESGL in (1,14,17)\n\t\twhere \n\t\t  \t dp.FechaEfe>=TO_DATE('{{DIARIZACIONES_INICIO}}') and \n\t\t  \t dp.FechaEfe<=TO_DATE('{{DIARIZACIONES_FECHA}}') \t\t\t  \n\t\tgroup by dp.IdPeriodo,\n\t\t\t\t dp.Cambio_Caracteristica,\n\t\t\t\t dp.Grupo,\n\t\t\t\t dp.RefRecibo,\n\t\t\t\t dp.FechaEfe,\n\t\t\t\t dp.FechaHas,\n\t\t\t\t dp.FecEfecto,\n\t\t\t\t dp.FecVencimiento,\n\t\t\t\t dp.TipoPrima,\n\t\t\t\t dp.TipoRecibo,\n\t\t\t\t dp.FrecuenciaPago,\n\t\t\t\t dp.FAno,\n\t\t\t\t dp.TipUnGes,\n\t\t\t\t dp.FormaPago,\n\t\t\t\t dp.Poliza,\n\t\t\t\t Desg.GRDESGL_COD_GARAN\t","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Batch"],"executionEngine":"Batch"},{"name":"ExcluirRecibos","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary","NaryToNary"],"writer":{"saveMode":"Append","tableName":"ExcluirRecibosTb","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1910.805230126346,"y":-37.36017914778506}},"configuration":{"sql":"select \n\tIdempresa \n            , Idramo \n            , ReferenciaRecibo\n            , Poliza\n            , Estado\n            , Situacion\n            , FecEfecto\n            , FecVencimiento\n            , FactorPrimaRecibo\n            , FrecuenciaPago\n            , TipoRecibo\n            , Anualidad\n            , NumeroFraccion\n            , Imputable\n\t\t\t, TipUnGes\n\t\t\t, FormaPago\n from UnionRecibos \nWhere \n\tReferenciaRecibo NOT IN \n\t\t( SELECT ReferenciaRecibo FROM RECIBOSEXCLUIR )\ndistribute by Poliza, FecEfecto, FecVencimiento","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Batch"],"executionEngine":"Batch"},{"name":"XDPolizasEstudio","stepType":"Input","className":"CrossdataInputStep","classPrettyName":"Crossdata","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1419.9813319554612,"y":317.04040016059076}},"configuration":{"query":"CREATE TEMPORARY VIEW PolizasEstudio \nAS SELECT \n\tCAST(apolclav AS INT) as apolclav,\n\tCASE \n\t\tWHEN FechaEntrada > '{{DIARIZACIONES_INICIO}}' THEN TO_DATE(FechaEntrada)\n\t\tELSE TO_DATE('{{DIARIZACIONES_INICIO}}') \n\t\tEND AS FechaEntradaEstudio,\n\tTO_DATE(FechaEntrada) as FechaEntrada\n\tFROM XPOLIZAS_COMUN\n\tWHERE TO_DATE(FechaEntrada) <= TO_DATE('{{DIARIZACIONES_FECHA}}')\n\t\n/*\ninsert into \n\t\t\ttmp_m.diarizaciones_autos.polizas_estudio with (tablock)\n\t\tselect \n\t\t\tapolclav,\n\t\t\tcase \n\t\t\t\twhen FechaEntrada>@InicioEstudio then FechaEntrada\n\t\t\t\telse @InicioEstudio\n\t\t\tend as FechaEntradaEstudio,\n\t\t\tFechaEntrada  \n\t\tfrom \n\t\t\txautos_m.dbo.xpolizas_comun xp  \n\t\twhere FechaEntrada<@DiaDespues\n*/","tlsEnabled":true},"supportedEngines":["Batch"],"executionEngine":"Batch"},{"name":"XDFilterVXRecibos","stepType":"Input","className":"CrossdataInputStep","classPrettyName":"Crossdata","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1418.1954158827186,"y":-107.18806375805138}},"configuration":{"query":"CREATE TEMPORARY VIEW FilterVXRecibos \nAS SELECT \n\t\tRec.IdEmpresa \n        , Rec.IdRamo \n        , CAST(Rec.ReferenciaRecibo AS BIGINT) AS ReferenciaRecibo\n        , Rec.Anualidad\n        , Rec.NumeroFraccion\n\tFROM V_XRECIBOS Rec\nWHERE \tRec.IdEmpresa in (1,3)\n\t\tAND Rec.IdRamo=1 ","tlsEnabled":true},"supportedEngines":["Batch"],"executionEngine":"Batch"},{"name":"XDFilterXRecibos","stepType":"Input","className":"CrossdataInputStep","classPrettyName":"Crossdata","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1419.4693738781139,"y":38.303936098728}},"configuration":{"query":"CREATE TEMPORARY VIEW FilterXRecibos \nAS SELECT \n\t\tRec.Idempresa \n        , Rec.Idramo \n        , CAST(Rec.ReferenciaRecibo AS BIGINT) AS ReferenciaRecibo\n        , CAST(Rec.Poliza AS INT) AS Poliza\n        , Rec.Estado\n        , Rec.Situacion\n        , TO_DATE(Rec.FecEfecto) as FecEfecto\n        , TO_DATE(Rec.FecVencimiento) as FecVencimiento\n        , CAST(Rec.FactorPrimaRecibo AS INT) as FactorPrimaRecibo\n        , Rec.FrecuenciaPago\n        , Rec.TipoRecibo\n        , Rec.Imputable\n\t\t, Rec.TipUnGes\n\t\t, Rec.FormaPago\n\tFROM XRECIBOS Rec\nWHERE \tRec.Idempresa in (1,3)\n\t\tAND Rec.Idramo=1 \n\t\tAND ( Rec.FrecuenciaPago = 'P' \n\t\tOR Rec.Poliza IN ( \n\t\t  \tSELECT apolclav \n\t\t  \t\tFROM PolizasEstudio\n\t\t\t)\n\t\t)\n\t\tAND Rec.Imputable = 1\n\t\t","tlsEnabled":true},"supportedEngines":["Batch"],"executionEngine":"Batch"},{"name":"UnionRecibos","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary","NaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1658.6062593425268,"y":-35.403522194677564}},"configuration":{"sql":"SELECT\tRec.Idempresa \n        , Rec.Idramo \n        , Rec.ReferenciaRecibo\n        , Rec.Poliza\n        , Rec.Estado\n        , Rec.Situacion\n        , Rec.FecEfecto\n        , Rec.FecVencimiento\n        , Rec.FactorPrimaRecibo\n        , Rec.FrecuenciaPago\n        , Rec.TipoRecibo\n        , Rec2.Anualidad\n        , Rec2.NumeroFraccion\n        , Rec.Imputable\n\t\t, Rec.TipUnGes\n\t\t, Rec.FormaPago\n\t\tFROM FilterXRecibos Rec LEFT JOIN FilterVXRecibos Rec2 ON\n                Rec.Idempresa = Rec2.IdEmpresa\n                AND Rec.Idramo = Rec2.IdRamo\n                AND Rec.ReferenciaRecibo = Rec2.ReferenciaRecibo","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Batch"],"executionEngine":"Batch"},{"name":"UnionFechas","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary","NaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1649.02168646543,"y":405.8831729769915}},"configuration":{"sql":"--movimientos polizas\n(\n  SELECT \n\tep.apolclav,\n  \tTO_DATE(c.FechaMovini) as FechaEstudio,\n  \t1 as Tipo \n  FROM \n\t  XPOLIZAS c \n  JOIN \n\t  PolizasEstudio ep\n  ON \n\t  c.Apolclav=ep.apolclav\n  WHERE \n\t  TO_DATE(c.FechaMovini) between TO_DATE(ep.FechaEntradaEstudio) and TO_DATE('{{DIARIZACIONES_FECHA}}')  \t\n)  \n\nUNION ALL\n-- fechas recibos\n\n(\n  SELECT \n\tep.apolclav as apolclav,\n\t\tCASE \n\t\tWHEN Rec.GRRECIB_FECH_VENC=Rec.GRRECIB_FECH_EFE then DATE_ADD(TO_DATE(Rec.GRRECIB_FECH_VENC),1)\n\t\tELSE TO_DATE(Rec.GRRECIB_FECH_VENC) \n\t\tEND \n  \tAS FechaEstudio,\n\t20 AS Tipo \n  FROM \n\t  TGRRECIB Rec JOIN PolizasEstudio ep\n  ON \n\t  Rec.GRRECIB_ID_ADHES=ep.apolclav\n  WHERE \n\t  Rec.GRRECIB_EMPRESA in (1,3)\n\t  AND\tRec.GRRECIB_FECH_VENC >= ep.FechaEntradaEstudio AND Rec.GRRECIB_FECH_VENC <= TO_DATE('{{DIARIZACIONES_FECHA}}')\n  UNION ALL\n  SELECT \n\tep.apolclav AS apolclav,\n  \tTO_DATE(Rec.GRRECIB_FECH_VENC) AS FechaEstudio,\n  \t21 AS Tipo \n  FROM \n\t  TGRRECIB Rec JOIN PolizasEstudio ep\n  ON \n\t  Rec.GRRECIB_ID_ADHES=ep.apolclav\n  WHERE \n\t  Rec.GRRECIB_EMPRESA IN (1,3) \n\t  AND\tRec.GRRECIB_FECH_EFE >= ep.FechaEntradaEstudio AND Rec.GRRECIB_FECH_EFE <= TO_DATE('{{DIARIZACIONES_FECHA}}')\n  UNION ALL\n  SELECT\n  \tep.apolclav AS apolclav,\n  \tTO_DATE(Rec.GRRECIB_FECH_VENC) AS FechaEstudio,\n  \t23 AS Tipo \n  FROM \n\t  TGRRECIB Rec JOIN PolizasEstudio ep\n  ON Rec.GRRECIB_ID_ADHES=ep.apolclav\n  WHERE \n\t  Rec.GRRECIB_EMPRESA IN (1,3) AND \n\t  Rec.GRRECIB_TIP_RECI='010' AND\n\t  Rec.GRRECIB_FECH_EFE=Rec.GRRECIB_FECH_VENC AND\n\t  Rec.GRRECIB_FECH_EFE >= ep.FechaEntradaEstudio AND Rec.GRRECIB_FECH_EFE <= TO_DATE('{{DIARIZACIONES_FECHA}}')\n)\t\n\nUNION ALL\n--cambios frt\n(\n  SELECT Apolclav, \n\t  TO_DATE(concat(ano, '-', month(Frt),'-',dayofmonth(Frt))) as FechaEstudio,\n\t  0 as Tipo\n  FROM\n  (\n\t  (\n\t  SELECT distinct xp.Apolclav, xp.Frt, ep.FechaEntradaEstudio \n\t\t  FROM PolizasEstudio ep JOIN XPOLIZAS xp \n\t\t  ON ep.apolclav = xp.Apolclav\n\t  ) as frts\n\t  CROSS JOIN  \t \n\t  (\n\t  SELECT distinct year(FinMes) as ano \n\t\t  from CsvMeses \n\t\t  WHERE FinMes between TO_DATE('{{DIARIZACIONES_INICIO}}') and TO_DATE('{{DIARIZACIONES_FECHA}}')\n\t  ) as anos\n  ) \n  WHERE TO_DATE(concat(ano, '-', month(Frt),'-',dayofmonth(Frt))) between TO_DATE(FechaEntradaEstudio) and TO_DATE('{{DIARIZACIONES_FECHA}}')\n)\n--frt ocasional\nUNION ALL\n\n(\n  SELECT Apolclav, \n\t  TO_DATE(concat(ano, '-', month(FRTCROcasional),'-',dayofmonth(FRTCROcasional))) as FechaEstudio,\n\t  0 as Tipo\n  FROM\n  (\n\t  (\n\t  SELECT distinct xp.Apolclav, xp.FRTCROcasional, ep.FechaEntradaEstudio \n\t\t  FROM PolizasEstudio ep JOIN XPOLIZAS xp \n\t\t  ON ep.apolclav = xp.Apolclav\n\t  ) as frtsOca\n\t  CROSS JOIN  \t \n\t  (\n\t  SELECT distinct year(FinMes) as ano \n\t\t  from CsvMeses \n\t\t  WHERE FinMes between TO_DATE('{{DIARIZACIONES_INICIO}}') and TO_DATE('{{DIARIZACIONES_FECHA}}')\n\t  ) as anosOca\n  ) \n  WHERE TO_DATE(concat(ano, '-', month(FRTCROcasional),'-',dayofmonth(FRTCROcasional))) between TO_DATE(FechaEntradaEstudio) and TO_DATE('{{DIARIZACIONES_FECHA}}')\n)\n\nUNION ALL\n\n--cumple del conductor\n(\nselect \n    ep.apolclav,\n    TO_DATE(concat(mes.ano,'-',month(pol.FnacConductor),'-',dayofmonth(pol.FnacConductor))) as FechaEstudio,\n    0 as Tipo                        \nfrom \n    PolizasEstudio ep\njoin\n    XPOLIZAS pol \non\n    ep.apolclav=pol.Apolclav\njoin\n    (\n      select distinct year(FinMes) as ano from CsvMeses  --no seria necesario tanto calculo pero lo dejamos como en transact\n        where \n            (\n\t\t\t  year(FinMes) between year(to_date('{{DIARIZACIONES_INICIO}}')) and year(date_add(to_date('{{DIARIZACIONES_FECHA}}'),1)) -1\n                                        and month(FinMes) = 12\n\t\t\t) \n            or \n            (\n\t\t\t month(FinMes) = month(date_add(to_date('{{DIARIZACIONES_FECHA}}'),1)) - 1\n             and year(FinMes) = year(date_add(to_date('{{DIARIZACIONES_FECHA}}'), 1))\n\t\t\t)\n      --select distinct year(FinMes) as ano from CsvMeses where FinMes between to_date('{{DIARIZACIONES_INICIO}}') and to_date('{{DIARIZACIONES_FECHA}}')\n    ) as mes \non \n    TO_DATE(concat(mes.ano,'-',month(pol.FnacConductor),'-',dayofmonth(pol.FnacConductor))) between pol.FechaMovini and pol.FechaMovFin\nwhere \n    TO_DATE(concat(mes.ano,'-',month(pol.FnacConductor),'-',dayofmonth(pol.FnacConductor))) between to_date('{{DIARIZACIONES_INICIO}}') and to_date('{{DIARIZACIONES_FECHA}}')\n)\n\nUNION ALL \n\n--cumple del ocasional\n(\nselect \n    ep.apolclav,\n    TO_DATE(concat(mes.ano,'-',month(pol.FNacCROcasional),'-',dayofmonth(pol.FNacCROcasional))) as FechaEstudio,\n    0 as Tipo                        \nfrom \n    PolizasEstudio ep\njoin\n    XPOLIZAS pol \non\n    ep.apolclav=pol.Apolclav\njoin\n    (\n     select distinct year(FinMes) as ano from CsvMeses  --no seria necesario tanto calculo pero lo dejamos como en transact\n\t\twhere \n\t\t(\n\t\t  year(FinMes) between year(to_date('{{DIARIZACIONES_INICIO}}')) and year(date_add(to_date('{{DIARIZACIONES_FECHA}}'),1)) -1\n\t\t  and month(FinMes) = 12\n\t\t) \n\t\tor \n\t\t(\n\t\t  month(FinMes) = month(date_add(to_date('{{DIARIZACIONES_FECHA}}'),1)) - 1\n\t\t  and year(FinMes) = year(date_add(to_date('{{DIARIZACIONES_FECHA}}'), 1))\n\t\t)\n\t  --select distinct year(FinMes) as ano from CsvMeses where FinMes between to_date('{{DIARIZACIONES_INICIO}}') and to_date('{{DIARIZACIONES_FECHA}}')\n    ) as mes \non \n    TO_DATE(concat(mes.ano,'-',month(pol.FNacCROcasional),'-',dayofmonth(pol.FNacCROcasional))) between pol.FechaMovini and pol.FechaMovFin\nwhere \n    TO_DATE(concat(mes.ano,'-',month(pol.FNacCROcasional),'-',dayofmonth(pol.FNacCROcasional))) between to_date('{{DIARIZACIONES_INICIO}}') and to_date('{{DIARIZACIONES_FECHA}}')\n)\t\n\t\nUNION ALL\n-- cumple del vehiculo\n\n(\nselect \n    ep.apolclav,\n    TO_DATE(concat(mes.ano,'-',month(pol.FechaConstruccion),'-',dayofmonth(pol.FechaConstruccion))) as FechaEstudio,\n    0 as Tipo                        \nfrom \n    PolizasEstudio ep\njoin\n    XPOLIZAS pol \non\n    ep.apolclav=pol.Apolclav\njoin\n    (\n      select distinct year(FinMes) as ano from CsvMeses  --no seria necesario tanto calculo pero lo dejamos como en transact\n        where \n            (\n\t\t\t  year(FinMes) between year(to_date('{{DIARIZACIONES_INICIO}}')) and year(date_add(to_date('{{DIARIZACIONES_FECHA}}'),1)) -1\n                                        and month(FinMes) = 12\n\t\t\t) \n            or \n            (\n\t\t\t month(FinMes) = month(date_add(to_date('{{DIARIZACIONES_FECHA}}'),1)) - 1\n             and year(FinMes) = year(date_add(to_date('{{DIARIZACIONES_FECHA}}'), 1))\n\t\t\t)\n\t  --select distinct year(FinMes) as ano from CsvMeses where FinMes between to_date('{{DIARIZACIONES_INICIO}}') and to_date('{{DIARIZACIONES_FECHA}}')\n    ) as mes \non \n    TO_DATE(concat(mes.ano,'-',month(pol.FechaConstruccion),'-',dayofmonth(pol.FechaConstruccion))) between pol.FechaMovini and pol.FechaMovFin\nwhere \n    TO_DATE(concat(mes.ano,'-',month(pol.FechaConstruccion),'-',dayofmonth(pol.FechaConstruccion))) between to_date('{{DIARIZACIONES_INICIO}}') and to_date('{{DIARIZACIONES_FECHA}}')\t\n)\t\n\nUNION ALL\n\n--cumple del tomador\n\n(\nselect \n    ep.apolclav,\n    TO_DATE(concat(mes.ano,'-',month(pol.FnacTomador),'-',dayofmonth(pol.FnacTomador))) as FechaEstudio,\n    0 as Tipo                        \nfrom \n    PolizasEstudio ep\njoin\n    XPOLIZAS pol \non\n    ep.apolclav=pol.Apolclav\njoin\n    (\n      select distinct year(FinMes) as ano from CsvMeses  --no seria necesario tanto calculo pero lo dejamos como en transact\n        where \n            (\n\t\t\t  year(FinMes) between year(to_date('{{DIARIZACIONES_INICIO}}')) and year(date_add(to_date('{{DIARIZACIONES_FECHA}}'),1)) -1\n                                        and month(FinMes) = 12\n\t\t\t) \n            or \n            (\n\t\t\t month(FinMes) = month(date_add(to_date('{{DIARIZACIONES_FECHA}}'),1)) - 1\n             and year(FinMes) = year(date_add(to_date('{{DIARIZACIONES_FECHA}}'), 1))\n\t\t\t)\n      --select distinct year(FinMes) as ano from CsvMeses where FinMes between to_date('{{DIARIZACIONES_INICIO}}') and to_date('{{DIARIZACIONES_FECHA}}')\n    ) as mes \non \n    TO_DATE(concat(mes.ano,'-',month(pol.FnacTomador),'-',dayofmonth(pol.FnacTomador))) between pol.FechaMovini and pol.FechaMovFin\nwhere \n    TO_DATE(concat(mes.ano,'-',month(pol.FnacTomador),'-',dayofmonth(pol.FnacTomador))) between to_date('{{DIARIZACIONES_INICIO}}') and to_date('{{DIARIZACIONES_FECHA}}')\n)\n\nUNION ALL\n\n\t--antiguedad polizas\n(\n\tselect \n\t\tapolclav,\n\t\tcase when concat(month(FechaEntrada),'-',dayofmonth(FechaEntrada)) = '2-29'\n\t\t then TO_DATE(concat(ano,'-','2-28'))\n\t\telse \n\t\t TO_DATE(concat(ano,'-',month(FechaEntrada),'-',dayofmonth(FechaEntrada)))\n\t\tend \n\t  \tas FechaEstudio,\n\t\t0 as Tipo\n\tfrom\n\t\tPolizasEstudio pol\n\tcross join\n\t\t(\n\t\tselect distinct \n\t\t\tyear(FinMes) as ano\n\t\tfrom \n\t\t\tCsvMeses \n\t\twhere \n\t\t\tFinMes between to_date('{{DIARIZACIONES_INICIO}}') and to_date('{{DIARIZACIONES_FECHA}}')\n\t\t) as fec\n\twhere TO_DATE(concat(ano,'-',month(FechaEntrada),'-',dayofmonth(FechaEntrada))) between FechaEntradaEstudio and TO_DATE('{{DIARIZACIONES_FECHA}}')\n)\n\n\n--fechas efecto duracion contrato renting (para globalis)\nUNION ALL\n\n(\n  SELECT \n\tep.apolclav,\n  \tTO_DATE(Ren.AMMOVRE_F_EFECTO) as FechaEstudio,\n  \t0 as Tipo \n  FROM \n\tPolizasEstudio ep  \n  JOIN \n\tTAMMOVRE Ren\n  ON \n\tep.apolclav = Ren.AMMOVRE_ID_POLIZA\n  WHERE \n\tRen.AMMOVRE_COD_MOVIM in ('ALCN','PRTC','PROG','AMPL') AND \n  \tRen.AMMOVRE_ID_POLIZA < 8000000\n)\n\n--fin de mes\nUNION ALL\n\nselect \n\tapolclav,\n\tfecha,\n\t0 as Tipo\n\tfrom\n\t\tPolizasEstudio pol\t\n\tcross join \n\t(\n\t\tselect to_date('{{DIARIZACIONES_INICIO}}') as fecha\n\t\tunion all\n\t\tselect date_add(to_date(FinMes),1) as fecha\n\t\tfrom \n\t\t\tCsvMeses \n\t\twhere FinMes between to_date('{{DIARIZACIONES_INICIO}}') and date_add(to_date('{{DIARIZACIONES_FECHA}}'),1)\n\t) as sub\n\twhere fecha between FechaEntradaEstudio and date_add(to_date('{{DIARIZACIONES_FECHA}}'),1)\n\t\n\n--fin de ano\nUNION ALL\nselect \n\tapolclav,\n\tfecha,\n\t9 as Tipo\n\tfrom\n\t\tPolizasEstudio pol\t\n\tcross join \n\t(\n\t\tselect to_date('{{DIARIZACIONES_INICIO}}') as fecha\n\t\tunion \n \t\tselect \n\t\t\tdate_add(to_date(FinMes),1) as fecha\n\t\tfrom \n\t\t\tCsvMeses \n\t\twhere year(FinMes) between  year(to_date('{{DIARIZACIONES_INICIO}}')) and year(date_add(to_date('{{DIARIZACIONES_FECHA}}'),1))-1\n\t \t\tand month(FinMes) = 12\n\t \t\tor month(FinMes) = month(date_add(to_date('{{DIARIZACIONES_FECHA}}'),1)) - 1 and year(FinMes) = year(date_add(to_date('{{DIARIZACIONES_FECHA}}'),1))   \n\t) as sub\n\twhere fecha between FechaEntradaEstudio and date_add(to_date('{{DIARIZACIONES_FECHA}}'),1)\n","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Batch"],"executionEngine":"Batch"},{"name":"XDFilterTGRDESGL","stepType":"Input","className":"CrossdataInputStep","classPrettyName":"Crossdata","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":2415.497857299257,"y":91.58531055410333}},"configuration":{"query":"CREATE TEMPORARY VIEW FilterTGRDESGL \nAS SELECT \n\t\tCAST(Desg.GRDESGL_COD_GARAN AS smallint) AS GRDESGL_COD_GARAN,\n\t\tCAST(Desg.GRDESGL_REF_RECIBO AS bigint) AS GRDESGL_REF_RECIBO,\n\t\tCAST(Desg.GRDESGL_EMPRESA AS smallint) AS GRDESGL_EMPRESA,\n\t\tCAST(Desg.GRDESGL_IMPORTE AS decimal(15,4)) AS GRDESGL_IMPORTE,\n\t\tCAST(Desg.GRDESGL_COD_DESGL AS smallint) AS GRDESGL_COD_DESGL,\n\t\tCAST(Desg.GRDESGL_RAMO AS tinyint) AS GRDESGL_RAMO\n\tFROM TGRDESGL Desg\n\tWHERE CAST(Desg.GRDESGL_COD_DESGL AS smallint) in (1,14,17)\n\t\t\tAND CAST(Desg.GRDESGL_IMPORTE AS DECIMAL(15,4)) > 0\n\t\t\tAND year(Desg.FEC_GENERACION) >= (year(TO_DATE('{{DIARIZACIONES_INICIO}}')) - 2)\n\tCLUSTER BY GRDESGL_REF_RECIBO, GRDESGL_EMPRESA","tlsEnabled":true},"supportedEngines":["Batch"],"executionEngine":"Batch"},{"name":"Parquet","stepType":"Output","className":"ParquetOutputStep","classPrettyName":"Parquet","arity":["NullaryToNullary","NaryToNullary"],"writer":{"saveMode":"Append"},"uiConfiguration":{"position":{"x":2759.635077676338,"y":510.87652529893495}},"configuration":{"path":"{{NINF_CONSOLIDATED}}/tmp/validatingPrimas","errorSink":false,"saveOptions":"[]"},"supportedEngines":["Streaming","Batch"],"executionEngine":"Batch"},{"name":"Recuentos","stepType":"Transformation","className":"TriggerTransformStep","classPrettyName":"Trigger","arity":["BinaryToNary","UnaryToNary","NaryToNary"],"writer":{"saveMode":"Overwrite","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":2727.930653753288,"y":-5.56101059727709}},"configuration":{"sql":"select count(*) as recuento, year(FechaEfe) as ano, month(FechaEfe) as mes\n from DiarizacionPrimas2Modulos\n group by year(FechaEfe), month(FechaEfe)","inputSchemas":"[]","executeSqlWhenEmpty":true},"supportedEngines":["Batch"],"executionEngine":"Batch"},{"name":"XDMESES","stepType":"Input","className":"CrossdataInputStep","classPrettyName":"Crossdata","arity":["NullaryToNary"],"writer":{"saveMode":"Append","tableName":"","partitionBy":"","errorTableName":""},"uiConfiguration":{"position":{"x":1419.3053662063344,"y":508.82330688385105}},"configuration":{"query":"CREATE TEMPORARY TABLE CsvMeses USING PARQUET OPTIONS (path '{{NINF_STAGING}}/MESES')","tlsEnabled":true},"supportedEngines":["Batch"],"executionEngine":"Batch"}],"edges":[{"origin":"GroupFechas","destination":"PeriodosEstudio"},{"origin":"PeriodosEstudio","destination":"PeriodosEstudioGrupos"},{"origin":"PeriodosEstudioGrupos","destination":"DiarizacionPrimasModulos"},{"origin":"ExcluirRecibos","destination":"DiarizacionPrimasModulos"},{"origin":"DiarizacionPrimasModulos","destination":"DiarizacionPrimas2Modulos"},{"origin":"XDFilterVXRecibos","destination":"UnionRecibos"},{"origin":"XDFilterXRecibos","destination":"UnionRecibos"},{"origin":"UnionRecibos","destination":"ExcluirRecibos"},{"origin":"XDPolizasEstudio","destination":"UnionFechas"},{"origin":"UnionFechas","destination":"GroupFechas"},{"origin":"XDFilterTGRDESGL","destination":"DiarizacionPrimas2Modulos"},{"origin":"DiarizacionPrimas2Modulos","destination":"Parquet"},{"origin":"DiarizacionPrimas2Modulos","destination":"Recuentos"},{"origin":"Recuentos","destination":"Parquet"},{"origin":"XDMESES","destination":"UnionFechas"},{"origin":"PeriodosEstudio","destination":"Parquet"},{"origin":"PeriodosEstudioGrupos","destination":"Parquet"}]},"executionEngine":"Batch","uiSettings":{"position":{"x":-578.1505774582853,"y":128.10614545016168,"k":0.5967319234958078}},"lastUpdateDate":"2018-06-13T15:37:31Z","version":2,"group":{"id":"57ef19c5-1f3c-4a65-9f6c-9793d3450aff","name":"/home/mutua/diarizaciones/apaniagua"},"tags":["cruces-al-90%"],"status":{"id":"0b31a9fe-b0d7-4b73-a14e-b287cd528030","status":"Finished","statusInfo":"Workflow correctly finished in Marathon API","lastExecutionMode":"marathon","lastUpdateDate":"2018-06-13T15:49:35Z","lastUpdateDateWorkflow":"2018-06-13T15:37:31Z"}}